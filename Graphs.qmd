---
title: "Graphs"
format:
    html:
        embed-resources: true
---

```{r setup, echo=FALSE, warning=FALSE, message=FALSE}

library(tidyverse)
library(readxl)
library(gganimate)
library(gifski)
library(dplyr)

# Define age groups
agegroup = Vectorize(function(number) {
	if (number >= 17 & number <= 20) {
		return ("17-20")
	} else if (number >= 21 & number <= 25) {
		return ("21-25")
	} else if (number >= 26 & number <= 30) {
		return ("26-30")
	} else if (number >= 31 & number <= 35) {
		return ("31-35")
	} else if (number >= 36 & number <= 40) {
		return ("36-40")
	} else {
		return ("41+")
    }
})

# Import data
data = read_xlsx("all_data.xlsx", sheet = "pooled123") |>
    mutate(choice = recode(choice, CHOICE = "Choice", NO_CHOICE = "No Choice")) |> 
    mutate(ageset = agegroup(age)) |> 
    filter(ageset != "41+")
# Combine choice and environment as single variable
data$choice_and_env = paste(data$choice, "-", data$env)

```

```{r}

# Choice & Environment vs. Δ VR Anxiety
ce_vranx_plot = ggplot(data, aes(x = choice_and_env, y = vranxiety, color = choice, fill = env)) + 
    geom_boxplot() + 
    labs(title = "Change in Anxiety Level Against Choice and Environment from Ages {closest_state}",
        x = "Choice Given & VR Environment",
        y = "Δ VR Anxiety Level",
        color = "Choice Given",
        fill = "VR Environment") +
    scale_fill_manual(values=c("lightblue", "orange")) +
    scale_colour_manual(values=c("chartreuse4", "brown3")) +
    transition_states(ageset, transition_length = 1, state_length = 1, wrap = TRUE) +
    enter_fade() + 
    exit_shrink() + 
    ease_aes('exponential-in-out')

animate(ce_vranx_plot, renderer = gifski_renderer(), duration = 15)

# ONLY Choice vs. Δ VR Anxiety
ggplot(data, aes(x = choice, y = vranxiety, color = choice)) +
    labs(x = "Choice Given", y="Δ VR Anxiety", color = "Choice Given") +
    geom_boxplot() +
    scale_colour_manual(values=c("chartreuse4", "brown3"))

# ONLY Environment vs. Δ VR Anxiety
ggplot(data, aes(x = env, y = vranxiety, fill = env)) +
    labs(x = "VR Environment", y="Δ VR Anxiety", fill = "VR Environment") +
    geom_boxplot() +
    scale_fill_manual(values=c("lightblue", "orange"))
```

```{r}

# Baseline VR Anxiety Rating vs. Active VR Anxiety Rating
# This graph allows us to predict VR anxiety after the VR experience from self-reported levels of anxiety *beforehand*
ggplot(data, aes(x = BVRA, y = PVRA)) +
    geom_point() +
    geom_smooth(method = "lm") +
    labs(title = "Baseline VR Anxiety Rating vs. Active VR Anxiety Rating",
         x = "Baseline VR Anxiety Rating",
         y = "Active VR Anxiety Rating")

# Appendix A: Residual Plot
vranxiety_model = lm(PVRA ~ BVRA, data = data)

ggplot(vranxiety_model, aes(x = .fitted, y = .resid)) +
    geom_point() +
    geom_hline(yintercept = 0) +
    labs(title = "BVRA vs. AVRA Residual Plot",
         x = "Predicted Values",
         y = "Error")


# Choice & Environment vs. Δ State Anxiety Level
# This graph allows us to predict how **GENERAL** anxiety *changes* based on Choice and Environment
ggplot(data, aes(x = choice_and_env, y = stai)) +
    geom_boxplot() +
    labs(title = "Choice & Environment vs. Δ State Anxiety Level",
         x = "Choice & Environment",
         y = "Δ STAI-6 Sum Score")


# Baseline State Anxiety Rating vs. Active State Anxiety Rating
# This graph allows us to predict **GENERAL** anxiety after the VR experience from self-reported levels of **GENERAL** anxiety *beforehand*
ggplot(data, aes(x = baseline_stai, y = p_stai)) +
    geom_point() +
    geom_smooth(method = "lm") +
    labs(title = "Baseline State Anxiety Rating vs. Active State Anxiety Rating",
         x = "Baseline STAI-6 Sum Score",
         y = "Active STAI-6 Sum Score") +
    geom_abline(intercept = 0, slope = 1)

# Appendix B: Residual Plot
stai_model = lm(p_stai ~ baseline_stai, data = data)

ggplot(stai_model, aes(x = .fitted, y = .resid)) +
    geom_point() +
    geom_hline(yintercept = 0) +
    labs(title = "B-STAI-6 Sum Score vs. A-STAI-6 Sum Score Residual Plot",
         x = "Predicted Values",
         y = "Error")
```

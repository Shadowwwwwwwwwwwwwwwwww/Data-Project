---
title: "Graphs"
format:
    html:
        embed-resources: true
	code-fold: true
        code-tools: true
execute:
    warning: false
    message: false
---

```{r setup, code-fold=TRUE, warning=FALSE, message=FALSE}
#| label: setup
knitr::opts_chunk$set(code-fold=TRUE, warning=FALSE, message=FALSE)
library(tidyverse)
library(cowplot)
library(readxl)
library(gganimate)
library(gifski)
library(dplyr)

# Define age groups
agegroup = Vectorize(function(number) {
	if (number >= 16 & number <= 20) {
		return ("16-20")
	} else if (number >= 21 & number <= 25) {
		return ("21-25")
	} else if (number >= 26 & number <= 30) {
		return ("26-30")
	} else if (number >= 31 & number <= 35) {
		return ("31-35")
	} else if (number >= 36 & number <= 40) {
		return ("36-40")
	} else {
		return ("41+")
    }
})

# Import data
data = read_xlsx("all_data.xlsx", sheet = "pooled123") |>
    mutate(choice = recode(choice, CHOICE = "Choice", NO_CHOICE = "No Choice")) |> 
    mutate(ageset = agegroup(age)) |> 
    filter(ageset != "41+")
# Combine choice and environment as single variable
data$choice_and_env = paste(data$choice, "-", data$env)
```

## VR Anxiety

### Δ VR Anxiety

#### Δ VR Anxiety vs. Choice & Environment, No Separation by Age Ranges

```{r}
#| label: ce-vranx-noage
ggplot(data, aes(x = choice_and_env, y = vranxiety, color = choice, fill = env)) + 
    geom_boxplot() + 
    labs(title = "Change in Anxiety Level vs. Choice & Environment",
         x = "Choice Given & VR Environment",
         y = "Δ VR Anxiety Level",
         color = "Choice Given",
         fill = "VR Environment") +
    scale_fill_manual(values=c("lightblue", "orange")) +
    scale_colour_manual(values=c("chartreuse4", "brown3"))
```

##### Δ VR Anxiety vs. Choice & Environment, Separation by Age Ranges

```{r}
#| label: ce-vranx-age

ce_vranx_age_plot = ggplot(data, aes(x = choice_and_env, y = vranxiety, color = choice, fill = env)) + 
    geom_boxplot() + 
    labs(title = "Change in Anxiety Level vs. Choice & Environment by Age Ranges {closest_state}",
         x = "Choice Given & VR Environment",
         y = "Δ VR Anxiety Level",
         color = "Choice Given",
         fill = "VR Environment") +
    scale_fill_manual(values=c("lightblue", "orange")) +
    scale_colour_manual(values=c("chartreuse4", "brown3")) +
    transition_states(ageset, transition_length = 1, state_length = 5, wrap = FALSE) +
    enter_fade() + 
    exit_shrink() + 
    ease_aes('exponential-in-out')

animate(ce_vranx_age_plot, renderer = gifski_renderer(), duration = 20)
```

#### Δ VR Anxiety vs. Choice and Environment Separately

```{r}
#| label: separate-ce-vranx

# ONLY Δ VR Anxiety vs. Choice
choice_plot = ggplot(data, aes(x = choice, y = vranxiety, color = choice)) +
    labs(x = "Choice Given", 
         y = "Δ VR Anxiety", 
         color = "Choice Given") +
    geom_boxplot() +
    scale_colour_manual(values=c("chartreuse4", "brown3"))

# ONLY Δ VR Anxiety vs. Environment
env_plot = ggplot(data, aes(x = env, y = vranxiety, fill = env)) +
    labs(x = "VR Environment", 
         y = "Δ VR Anxiety", 
 	 fill = "VR Environment") +
    geom_boxplot() +
    scale_fill_manual(values=c("lightblue", "orange"))

plot_grid(choice_plot, env_plot)
```

### Baseline and Active VR Anxiety

#### Active VR Anxiety Rating vs. Baseline VR Anxiety Rating

This graph allows us to predict VR anxiety after the VR experience from self-reported levels of anxiety *beforehand*

```{r}
#| label: bvra-pvra
ggplot(data, aes(x = BVRA, y = PVRA)) +
    geom_point() +
    geom_smooth(method = "lm") +
    labs(title = "Active VR Anxiety Rating vs. Baseline VR Anxiety Rating",
         x = "Baseline VR Anxiety Rating",
         y = "Active VR Anxiety Rating")
```

```{r}
#| label: bvra-pvra-resid
vranxiety_model = lm(PVRA ~ BVRA, data = data)
vranxiety_cor = cor(data$PVRA, data$BVRA)

ggplot(data, aes(x = BVRA, y = PVRA)) +
    geom_point() +
    geom_smooth(method = "lm") +
    labs(x = "Baseline VR Anxiety Rating",
         y = "Active VR Anxiety Rating") +
    ggtitle("Active VR Anxiety Rating vs. Baseline VR Anxiety Rating", 
            subtitle = paste("r =", vranxiety_cor))

# Appendix A: Residual Plot
ggplot(vranxiety_model, aes(x = .fitted, y = .resid)) +
    geom_point() +
    geom_hline(yintercept = 0) +
    labs(title = "PVRA vs. BVRA Residual Plot",
         x = "Predicted Values",
         y = "Error")
```

## State Anxiety Level

### Δ State Anxiety Level

#### Δ State Anxiety Level vs. Choice & Environment, No Separation by Age Ranges

This graph allows us to predict how **general** anxiety *changes* based on Choice and Environment

```{r}
#| label: ce-stai-noage
ggplot(data, aes(x = choice_and_env, y = stai, color = choice, fill = env)) +
    geom_boxplot() +
    labs(title = "Δ State Anxiety Level vs. Choice & Environment",
         x = "Choice Given & VR Environment",
         y = "Δ STAI-6 Sum Score",
         color = "Choice Given",
         fill = "VR Environment") +
    scale_fill_manual(values=c("lightblue", "orange")) +
    scale_colour_manual(values=c("chartreuse4", "brown3"))
```

#### Δ State Anxiety Level vs. Choice & Environment, Separation by Age Ranges

This graph allows us to predict how **general** anxiety *changes* based on Choice and Environment

```{r}
#| label: ce-stai-age
ce_stai_age_plot = ggplot(data, aes(x = choice_and_env, y = stai, color = choice, fill = env)) + 
    geom_boxplot() + 
    labs(title = "Δ State Anxiety Level vs. Choice & Environment by Age Ranges {closest_state}",
         x = "Choice Given & VR Environment",
         y = "Δ STAI-6 Sum Score",
         color = "Choice Given",
         fill = "VR Environment") +
    scale_fill_manual(values=c("lightblue", "orange")) +
    scale_colour_manual(values=c("chartreuse4", "brown3")) +
    transition_states(ageset, transition_length = 1, state_length = 5, wrap = FALSE) +
    enter_fade() + 
    exit_shrink() + 
    ease_aes('exponential-in-out')

animate(ce_stai_age_plot, renderer = gifski_renderer(), duration=20)
```

#### Δ State Anxiety Level vs. Choice and Environment Separately

```{r}
#| label: separate-ce-stai

# Δ State Anxiety Level vs. ONLY Choice
choice_plot = ggplot(data, aes(x = choice, y = stai, color = choice)) +
    labs(
        title = "Δ State Anxiety Level vs. Choice Given",
        x = "Choice Given",
        y = "Δ STAI Level",
        color = "Choice Given") +
    geom_boxplot() +
    scale_colour_manual(values=c("chartreuse4", "brown3"))

# ONLY Δ State Anxiety Level vs. VR Environment
env_plot = ggplot(data, aes(x = env, y = stai, fill = env)) +
    labs(
        title = "Δ State Anxiety Level vs. VR Environment",
        x = "VR Environment",
        y = "Δ STAI Level",
        fill = "VR Environment") +
    geom_boxplot() +
    scale_fill_manual(values=c("lightblue", "orange"))

plot_grid(choice_plot, env_plot)
```

### Active State Anxiety Rating vs. Baseline State Anxiety Rating

This graph allows us to predict **general** anxiety after the VR experience from self-reported levels of **general** anxiety *beforehand*

```{r}
#| label: bstai-pstai
ggplot(data, aes(x = baseline_stai, y = p_stai)) +
    geom_point() +
    geom_smooth(method = "lm") +
    labs(title = "Active State Anxiety Rating vs. Baseline State Anxiety Rating",
         x = "Baseline STAI-6 Sum Score",
         y = "Active STAI-6 Sum Score")
```

```{r}
#| label: bstai-pstai-resid
stai_model = lm(p_stai ~ baseline_stai, data = data)
stai_cor = cor(data$p_stai, data$baseline_stai)

ggplot(data, aes(x = baseline_stai, y = p_stai)) +
    geom_point() +
    geom_smooth(method = "lm") +
    labs(x = "Baseline STAI-6 Sum Score",
         y = "Active STAI-6 Sum Score") +
    ggtitle("Active State Anxiety Rating vs. Baseline State Anxiety Rating", 
             subtitle = paste("r =", stai_cor))

# Appendix B: Residual Plot
ggplot(stai_model, aes(x = .fitted, y = .resid)) +
    geom_point() +
    geom_hline(yintercept = 0) +
    labs(title = "P-STAI-6 Sum Score vs. B-STAI-6 Sum Score Residual Plot",
         x = "Predicted Values",
         y = "Error")
```
